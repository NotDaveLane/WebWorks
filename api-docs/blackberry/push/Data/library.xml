<?xml version="1.0" encoding="utf-8"?>
<library isWhitelist="false">
  <object name="blackberry.push.Data" shortName="Push Data" introduced="1.0.0" comment="The Push Data object provides access to the data that has arrived as the result of a push.">
    <details>
      This object cannot be created by the new keyword.  It is generated only by the system on receipt of push data.
    </details>
    <features>
      <feature id="blackberry.push" version="1.0.0"/>
    </features>
    <example><![CDATA[<script type="text/javascript">
  var port = 1234; 

  function doMySubscription() {
    //See if they have a BIS transport.. if so use it
    var transports = blackberry.system.getTransportList();
    found = false;
    for (var i = 0; i < transports.length; i++) {
      if (transports[i].name == "BIS") {
        found = true;
        blackberry.push.openPushListener(handleMyReturnData, port, transport[i]);
        break;
      }        
    }
    if (!found)
      blackberry.push.openPushListener(handleMyReturnData, port);
  }

  function handleMyReturnData(data) {
    if (data != null) {
      var myRecievedData= blackberry.utils.blobToString(data.payload);   
      alert(data1.getHeaderField(0));
      alert("RequestURI=" + data.getRequestURI());
      alert("Source=" + data.getSource());
    }       
    else
      alert("No data available");
  }

  function cancelSubscription() {
    blackberry.push.closePushListener(port);
  }
</script>]]></example>

    <constants comment="[Decline Reasons]">
      <const name="ACCEPT" type="Number" value="0" comment="Push message accepted"/>
      <const name="DECLINE_USERDCR" type="Number" value="1" comment="Push message discarded due to resource shortage"/>
      <const name="DECLINE_USERDCU" type="Number" value="2" comment="Content type of Push message cannot be processed"/>
      <const name="DECLINE_USERPND" type="Number" value="3" comment="Push message cannot be delivered to intended destination"/>
      <const name="DECLINE_USERREQ" type="Number" value="4" comment="User refused Push message"/>
      <const name="DECLINE_USERRFS" type="Number" value="5" comment="User refused Push message"/>
    </constants>
    
    <functions>
      <func name="getHeaderField" returns="String" comment="Returns the value of a header field.">
        <param name="field" type="String" comment="This parameter is the name of the header field."/>
        <details>
          This method expires and will throw an exception if called outside of the push callback function.
        </details>
      </func>
      <func name="getHeaderField" returns="String" comment="Returns the value of a header field.">
        <param name="field" type="Number" comment="This parameter is the integer index of the header to retrieve."/>
        <details>
          This method expires and will throw an exception if called outside of the push callback function.
        </details>
      </func>
      <func name="getSource" returns="String" comment="Retrieves the source for this push stream.  String form of the source of this push; it could be a UID for a connection, IPv4 address, or SMSC.">
        <details>
          This method expires and will throw an exception if called outside of the push callback function.
        </details>
      </func>
      <func name="getRequestURI" returns="String" comment="Returns the URI of the push request.">
        <details>
          This method expires and will throw an exception if called outside of the push callback function.
        </details>
      </func>
    </functions>
    <properties>
      <property name="isChannelEncrypted" type="Boolean" readonly="true" comment="True if this channel is encrypted; otherwise, false."/>
      <property name="payload" type="Blob" readonly="true" comment="The binary data pushed to the device."/>
    </properties>
    
  </object>
</library>
